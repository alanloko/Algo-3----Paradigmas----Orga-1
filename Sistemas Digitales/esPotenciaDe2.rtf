{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .data\
    lista:\
        .byte 1,2,3,4,5,6,7,8\
.text\
main: \
    la a0, lista   # Carga la direcci\'f3n de 'lista' en a0\
    li a1, 8\
    jal ra, InvertirArreglo\
funciona: \
    j fin\
noFunciona: \
    li a1, 0\
fin: \
    j fin\
\
InvertirArreglo: \
    addi sp, sp, -12\
    sw a0, (0)sp # puntero de la lista\
    sw a1, (4)sp # longitud\
    sw ra, (8)sp\
    addi t0, x0, 0 # i-esimo elemento\
loop:\
    lw a0, (0)sp # cargo el puntero a la lista\
    add a0, a0, t0 # apunto al i-esimo elemento\
    lb a0, 0(a0) # cargo en a0, el valor que se ubica en el puntero de a0, load byte xq es una lista de elementos de 8 bits\
    jal ra, esPotenciaDe2 # devuelve 1 si el i-esimo elemento es potencia de 2\
    add a2, a2, a0 # a2 es mi acumulador\
    addi t0, t0, 1 # avanzo a i + 1\
    bne t0, a1, loop # si i < n loop sino termina\
    #\
    mv a0, a2\
    lw a1, (4)sp\
    lw ra, (8)sp\
    addi sp, sp, 12\
    ret \
\
esPotenciaDe2: \
    addi sp, sp, -4\
    sw ra, (0)sp\
    #\
    addi t1, a0, -1 \
    and a0, a0, t1 # mascara entre n y n-1\
    bne a0, x0 noEsPot\
    j EsPot\
    #\
    \
return:\
    lw ra, (0)sp\
    addi sp, sp, 4\
    ret\
\
noEsPot:\
    addi a0, x0, 0\
    j return\
\
EsPot:\
    addi a0, x0, 1\
    j return\
}