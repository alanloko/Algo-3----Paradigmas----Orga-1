{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 .data\
tablaCalificaciones:\
    .half 1001     # ID impar\
    .byte 7        # Nota \uc0\u8594  se suma\
\
    .half 2000     # ID par\
    .byte 10       # Nota \uc0\u8594  no se suma\
\
    .half 3003     # ID impar\
    .byte 5        # Nota \uc0\u8594  se suma\
\
    .half 0        # Fin del arreglo\
\
.text\
main: \
    la a0, tablaCalificaciones   # Carga la direcci\'f3n de 'lista' en a0\
    jal ra, sumanotas\
    \
    \
    \
fin: \
    j fin\
\
\
sumanotas:\
    addi sp, sp, -16\
    sw a0, (0)sp # puntero de la lista\
    sw ra, (12)sp\
    sw s0, (4)sp\
    addi t1, x0, 0\
    addi s0, x0, 0\
    addi t3, x0, 0\
    \
ParOImpar:\
    lw a0, (0)sp # cargo el puntero\
    add a0, a0, t1 # le agrego el offset\
    lh t0, (0)a0 # cargo el ID\
    beqz t0, return # si es 0 llegue al final\
    mv a0, t0 # chequeo si el ID es par\
    sw t1, (8)sp\
    jal esPar\
    lw t1, (8)sp\
    beqz a0, SumaImpares # si no es par lo sumo\
    addi t1, t1, 3 # offset de 3 para pasar al siguiente ID\
    j ParOImpar\
    \
SumaImpares:\
    addi t1, t1, 2\
    lw a0, (0)sp\
    add a0, a0, t1\
    lb t0, (0)a0\
    add t3, t0, t3\
    addi t1, t1, 1\
    j ParOImpar\
\
return:\
    mv a0, t3\
    lw ra, (12)sp\
    addi sp, sp, 16\
    ret \
\
##################################################    \
\
CantBytes: \
    addi sp, sp, -12\
    sw a0, (0)sp # puntero de la lista\
    sw ra, (8)sp\
\
\
    addi t1, x0, 0\
    \
loop1CantBytes:\
    lw a0, (0)sp\
    add a0, a0, t1\
    lh t0, (0)a0\
    beqz t0, returnCantBytes\
    addi t1, t1, 2\
    j loop2CantBytes\
    \
loop2CantBytes:\
    lw a0, (0)sp\
    add a0, a0, t1\
    lb t0, (0)a0\
    beqz t0, returnCantBytes\
    addi t1, t1, 1\
    j loop1CantBytes\
\
returnCantBytes:\
    mv a0, t1\
    lw ra, (8)sp\
    addi sp, sp, 12\
    ret \
\
esPar: \
    addi sp, sp, -4\
    sw ra, (0)sp\
    #\
    addi t1, x0, 1 \
    and a0, a0, t1 # mascara entre n y 1\
    beqz a0, Par\
    j noPar\
    #\
    \
returnPar:\
    lw ra, (0)sp\
    addi sp, sp, 4\
    ret\
\
noPar:\
    addi a0, x0, 0\
    j returnPar\
\
Par:\
    addi a0, x0, 1\
    j returnPar\
\
}